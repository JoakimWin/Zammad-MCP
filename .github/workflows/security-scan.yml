name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Monday at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'uv.lock'

      - name: Install dependencies
        run: |
          uv sync --dev --frozen

      - name: Codacy Trivy scan
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: "trivy"
          output: codacy.json

      - name: Run Bandit (HIGH/CRITICAL only)
        run: |
          # Full recursive scan of the entire codebase
          # --severity-level HIGH: Only fail on HIGH and CRITICAL severity issues
          echo "Running Bandit security scan (HIGH/CRITICAL only)..."
          uv run bandit -r mcp_zammad/ --severity-level HIGH -f json -o bandit-report.json

      - name: Generate Bandit SARIF report
        continue-on-error: true
        run: |
          # Generate SARIF for GitHub Security tab (includes all severities for visibility)
          echo "Generating Bandit SARIF report for Security tab..."
          uv run bandit -r mcp_zammad/ -f sarif -o bandit-sarif.json

      - name: Upload Bandit results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: bandit-sarif.json
          category: bandit

      - name: Run safety check
        run: |
          echo "Running safety vulnerability check..."
          # Will exit non-zero if vulnerabilities are found
          uv run safety check --json --output safety-report.json
          echo "✅ No known vulnerabilities found"

      - name: Run pip-audit
        run: |
          echo "Running pip-audit dependency scan..."
          # Will exit non-zero if vulnerabilities are found
          uv run pip-audit --format json --output pip-audit-report.json
          echo "✅ No dependency vulnerabilities found"

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            bandit-sarif.json
            safety-report.json
            pip-audit-report.json
            codacy.json

      - name: Generate Security Summary
        if: always()
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check Bandit results
          if [ -f bandit-report.json ]; then
            HIGH_COUNT=$(jq '[.results[] | select(.issue_severity == "HIGH")] | length' bandit-report.json)
            MED_COUNT=$(jq '[.results[] | select(.issue_severity == "MEDIUM")] | length' bandit-report.json)
            LOW_COUNT=$(jq '[.results[] | select(.issue_severity == "LOW")] | length' bandit-report.json)
            echo "### Bandit Static Analysis" >> $GITHUB_STEP_SUMMARY
            if [ "$HIGH_COUNT" -gt 0 ]; then
              echo "❌ **Failed**: Found $HIGH_COUNT HIGH severity issues" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ **Passed**: No HIGH/CRITICAL issues (Medium: $MED_COUNT, Low: $LOW_COUNT)" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check safety results
          echo "### Dependency Vulnerability Scans" >> $GITHUB_STEP_SUMMARY
          if [ -f safety-report.json ]; then
            SAFETY_VULNS=$(jq '.vulnerabilities | length' safety-report.json)
            if [ "$SAFETY_VULNS" -gt 0 ]; then
              echo "❌ **Safety**: Found $SAFETY_VULNS vulnerabilities" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ **Safety**: No known vulnerabilities" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          # Check pip-audit results
          if [ -f pip-audit-report.json ]; then
            AUDIT_VULNS=$(jq '.vulnerabilities | length' pip-audit-report.json)
            if [ "$AUDIT_VULNS" -gt 0 ]; then
              echo "❌ **pip-audit**: Found $AUDIT_VULNS vulnerabilities" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ **pip-audit**: No vulnerabilities" >> $GITHUB_STEP_SUMMARY
            fi
          fi